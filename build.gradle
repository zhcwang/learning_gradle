allprojects {
    apply plugin : 'java'
    sourceCompatibility = 1.8
}

subprojects {
    repositories {
        // 多仓库按顺序查找
        mavenLocal()
        mavenCentral()
        // 私服
        maven {
            url ''
        }
    }
    dependencies {
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        // 运行时依赖，比如面向接口编程jdbc,那么没必要在编译时就依赖mysql-jdbc，只有运行时才用到
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

}



// 禁用gradle自动版本依赖
configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force 'org.slf4j:slf4j-api:1.7.25'
    }
}

/*def createDir = {
    path ->
        File dir = new File(path);
        if (!dir.exists()) dir.mkdirs()
}

// 自定义任务
task makeJavaDir(){
    def paths = ['src/main/java', 'src/main/resources', 'src/main/java' ,'src/test/java' ,'src/test/resources']
    doFirst{
        paths.forEach(createDir)
    }
}

task makeWebDir(){
    dependsOn 'makeJavaDir'
    def paths = ['src/main/webapp', 'src/test/webapp']
    doLast{
        paths.forEach(createDir)
    }
}*/

// gradle 生命周期以及勾子
// 初始化 -> 配置 -> 执行
/*gradle.beforeProject {
    project ->
        // 钩子
}

gradle.taskGraph.whenReady {
    graph ->

}

gradle.buildFinished {

}*/
